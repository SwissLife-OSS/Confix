--------------------------------------------------
### CLI Output
--------------------------------------------------
  Configuration files of type .confixrc located at <</tmp>>/home/.confixrc
  Configuration files of type .confix.component located at <</tmp>>/content/Components/test/.confix.component
  Merged .confix.component from .confix.solution
✓ Running in scope Component
✓ Configuration loaded
  Component input 'graphql' loaded
✓ Component inputs loaded
  Building component...
  Searching in 'schema.graphql' for GraphQL Schema
   -> <</tmp>>/content/Components/test/schema.graphql
  GraphQL Schema was found: 'schema.graphql' <</tmp>>/content/Components/test/schema.graphql
  Generated schema based on GraphQL Schema:'schema.json' <</tmp>>/content/Components/test/schema.json
  Building component completed

--------------------------------------------------
### File: <<root>>/content/Components/test/schema.json
--------------------------------------------------
{
  "type": "object",
  "properties": {
    "str": {
      "anyOf": [
        {
          "$ref": "#/$defs/String"
        },
        {
          "type": "null"
        }
      ],
      "deprecated": false
    }
  },
  "required": [],
  "additionalProperties": false,
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$defs": {
    "Query": {
      "type": "object",
      "properties": {
        "str": {
          "anyOf": [
            {
              "$ref": "#/$defs/String"
            },
            {
              "type": "null"
            }
          ],
          "deprecated": false
        }
      },
      "required": [],
      "additionalProperties": false
    },
    "String": {
      "type": "string",
      "hasVariable": true,
      "description": "The \u0060String\u0060 scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."
    },
    "Boolean": {
      "type": "boolean",
      "hasVariable": true,
      "description": "The \u0060Boolean\u0060 scalar type represents \u0060true\u0060 or \u0060false\u0060."
    },
    "JSON": {
      "type": "string",
      "hasVariable": true
    }
  }
}
